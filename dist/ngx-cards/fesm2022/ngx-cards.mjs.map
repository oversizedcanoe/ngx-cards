{"version":3,"file":"ngx-cards.mjs","sources":["../../../projects/ngx-cards/src/lib/shared/enums.ts","../../../projects/ngx-cards/src/lib/components/ngx-card/ngx-cards.component.ts","../../../projects/ngx-cards/src/lib/components/ngx-card/ngx-cards.component.html","../../../projects/ngx-cards/src/lib/components/ngx-dice/ngx-dice.component.ts","../../../projects/ngx-cards/src/lib/components/ngx-dice/ngx-dice.component.html","../../../projects/ngx-cards/src/lib/models/card.ts","../../../projects/ngx-cards/src/lib/models/joker.ts","../../../projects/ngx-cards/src/lib/models/deck.ts","../../../projects/ngx-cards/src/lib/models/dice.ts","../../../projects/ngx-cards/src/public-api.ts","../../../projects/ngx-cards/src/ngx-cards.ts"],"sourcesContent":["export enum Suit {\r\n    None = 0, // Joker\r\n    Club = 1,\r\n    Diamond = 2,\r\n    Heart = 3,\r\n    Spade = 4\r\n}\r\n\r\nexport enum CardValue {\r\n    Joker = 0,\r\n    Ace = 1,\r\n    Two = 2,\r\n    Three = 3,\r\n    Four = 4,\r\n    Five = 5,\r\n    Six = 6,\r\n    Seven = 7,\r\n    Eight = 8,\r\n    Nine = 9,\r\n    Ten = 10,\r\n    Jack = 11,\r\n    Queen = 12,\r\n    King = 13,\r\n}\r\n\r\nexport enum FaceState {\r\n    FaceDown = 1,\r\n    FaceUp = 2,\r\n}","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { Deck } from '../../models/deck';\r\nimport { Card } from '../../models/card';\r\nimport { FaceState } from '../../shared/enums';\r\n\r\n@Component({\r\n  selector: 'ngx-card',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './ngx-cards.component.html',\r\n  styleUrl: './ngx-cards.component.css'\r\n})\r\n\r\nexport class NgxCardsComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Required parameter to specify an instance of a card.\r\n   */\r\n  @Input() card!: Card;\r\n\r\n  /**\r\n   * Optional parameter to reference a Deck instance.\r\n   */\r\n  @Input() deckRef: Deck | undefined;\r\n\r\n  fileName: string = '';\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.updateImageSource(this.card.state);\r\n    this.card.flipped.subscribe((newFaceState) => {\r\n      this.updateImageSource(newFaceState);\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.card.flipped.unsubscribe();\r\n  }\r\n\r\n  updateImageSource(state: FaceState) {\r\n    if (state == FaceState.FaceDown) {\r\n      this.fileName = `/assets/cards/R1.svg`;\r\n    }\r\n    else if (state == FaceState.FaceUp) {\r\n      this.fileName = `/assets/cards/${this.card.shorthandName()}.svg`;\r\n    }\r\n    else {\r\n      throw Error(`Unknown Card FaceState: ${state}`)\r\n    }\r\n  }\r\n}\r\n","<div>\r\n    <img src=\"{{ fileName }}\"/>\r\n</div>","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FaceState } from '../../shared/enums';\r\nimport { Dice } from '../../models/dice';\r\n\r\n@Component({\r\n  selector: 'ngx-dice',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './ngx-dice.component.html',\r\n  styleUrl: './ngx-dice.component.css'\r\n})\r\n\r\nexport class NgxDiceComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Required parameter to specify an instance of a die.\r\n   */\r\n  @Input() dice!: Dice;\r\n\r\n  fileName: string = '';\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.updateImageSource(this.dice.value);\r\n    this.dice.rolled.subscribe((newValue) => {\r\n      this.updateImageSource(newValue);\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.dice.rolled.unsubscribe();\r\n  }\r\n\r\n  updateImageSource(newValue: number) {\r\n    this.fileName = `/assets/dice/d${newValue}.png`;\r\n  }\r\n}\r\n","<div>\r\n    <img src=\"{{ fileName }}\"/>\r\n</div>","import { Subject } from \"rxjs\";\r\nimport { CardValue, FaceState, Suit } from \"../shared/enums\";\r\n\r\nexport class Card {\r\n    public suit: Suit;\r\n    public value: number;\r\n    public state: FaceState;\r\n    public flipped: Subject<FaceState> = new Subject<FaceState>();\r\n\r\n    constructor(value: number, suit: Suit, state: FaceState = FaceState.FaceDown) {\r\n        if (value in CardValue == false) {\r\n            throw new Error(`Cannot create Card object with value: ${value}`)\r\n        }\r\n\r\n        if (suit in Suit == false) {\r\n            throw new Error(`Cannot create Card object with suit: ${suit}`)\r\n        }\r\n\r\n        if (state in FaceState == false) {\r\n            throw new Error(`Cannot create Card object with state: ${state}`)\r\n        }\r\n\r\n        if (suit == Suit.None && value != CardValue.Joker) {\r\n            throw new Error(`Invalid value: ${value}, only CardValue.Joker can be created with Suit.None`)\r\n        }\r\n\r\n        this.value = value;\r\n        this.suit = suit;\r\n        this.state = state;\r\n    }\r\n\r\n    public isFaceUp(): boolean {\r\n        return this.state == FaceState.FaceUp;\r\n    }\r\n\r\n    public isFaceDown(): boolean {\r\n        return this.isFaceUp() == false;\r\n    }\r\n\r\n    public flip() {\r\n        if (this.state == FaceState.FaceDown) {\r\n            this.state = FaceState.FaceUp\r\n        }\r\n        else if (this.state == FaceState.FaceUp) {\r\n            this.state = FaceState.FaceDown;\r\n        }\r\n\r\n        this.flipped.next(this.state);\r\n    }\r\n\r\n    public shorthandName() {\r\n        let name: string = '';\r\n        let addFirstCharOfSuit: boolean = true;\r\n\r\n        switch (this.value) {\r\n            case CardValue.Joker:\r\n                name += \"W\"; // wild\r\n                addFirstCharOfSuit = false;\r\n                break;\r\n            case CardValue.Ace:\r\n                name += \"A\";\r\n                break;\r\n            case CardValue.Jack:\r\n                name += \"J\";\r\n                break;\r\n            case CardValue.Queen:\r\n                name += \"Q\";\r\n                break;\r\n            case CardValue.King:\r\n                name += \"K\";\r\n                break;\r\n            default:\r\n                name += this.value.toString();\r\n        }\r\n\r\n        if (addFirstCharOfSuit) {\r\n            name += Suit[this.suit][0]; // first character of suit\r\n        }\r\n\r\n        return name;\r\n\r\n    }\r\n}\r\n\r\n","import { Suit } from \"../shared/enums\";\r\nimport { Card } from \"./card\";\r\n\r\nexport class Joker extends Card {\r\n    constructor() {\r\n        super(0, Suit.None);\r\n    }\r\n}","import { Card } from \"./card\";\r\nimport { Joker } from \"./joker\";\r\n\r\nexport class Deck {\r\n    private cards: Card[] = [];\r\n    cardCount: number = this.cards.length;\r\n\r\n    constructor(jokersIncluded = false, shuffled = true) {\r\n        for (let suitIndex = 1; suitIndex < 5; suitIndex++) {\r\n            for (let cardIndex = 1; cardIndex < 14; cardIndex++) {\r\n                this.cards.push(new Card(cardIndex, suitIndex));\r\n            }\r\n        }\r\n\r\n        this.cards.reverse();\r\n\r\n        if (jokersIncluded) {\r\n            this.cards.push(new Joker());\r\n            this.cards.push(new Joker());\r\n        }\r\n\r\n        if (shuffled) {\r\n            this.shuffle();\r\n        }\r\n    }\r\n\r\n    printDeck(): void {\r\n        this.cards.forEach(element => {\r\n            console.log(element.shorthandName());\r\n        });\r\n    }\r\n\r\n    shuffle(): void {\r\n        let currentIndex: number = this.cards.length;\r\n        let randomIndex: number;\r\n\r\n        while (currentIndex > 0) {\r\n            randomIndex = Math.floor(Math.random() * currentIndex);\r\n            currentIndex--;\r\n            // Swap current index with random index\r\n            [this.cards[currentIndex], this.cards[randomIndex]] = [this.cards[randomIndex], this.cards[currentIndex]];\r\n        }\r\n    }\r\n\r\n    drawCardFromTop(): Card | undefined {\r\n        return this.cards.pop();\r\n    }\r\n\r\n    drawCardFromBottom(): Card | undefined {\r\n        return this.cards.shift();\r\n    }\r\n\r\n    addCardToTop(card: Card): void {\r\n        this.cards.push(card);\r\n    }\r\n\r\n    addCardToMiddle(card: Card): void {\r\n        let randomIndex = Math.floor(Math.random() * this.cards.length);\r\n        this.cards.splice(randomIndex, 0, card);\r\n    }\r\n\r\n    addCardToBottom(card: Card): void {\r\n        this.cards.unshift(card);\r\n    }\r\n}\r\n","import { Subject } from \"rxjs\";\r\n\r\nexport class Dice {\r\n    public minValue: number = 1;\r\n    public maxValue: number;\r\n    public value: number = 1;\r\n    public rolled: Subject<number> = new Subject<number>();\r\n\r\n    constructor(maxValue: number = 6){\r\n        if (maxValue < 1){\r\n            throw new Error(`Parameter ${maxValue} must be greater than or equal to 1`)\r\n        }\r\n        else if (maxValue > 6){\r\n            throw new Error('Currently only up to D6 is supported.')\r\n        }\r\n\r\n        this.maxValue = maxValue;\r\n    }\r\n\r\n    public roll(){\r\n        this.value = Math.ceil(Math.random() * this.maxValue);\r\n        this.rolled.next(this.value);\r\n    }\r\n}","/*\r\n * Public API Surface of ngx-cards\r\n */\r\n\r\nexport * from './lib/components/ngx-card/ngx-cards.component';\r\nexport * from './lib/components/ngx-dice/ngx-dice.component';\r\nexport * from './lib/models/card';\r\nexport * from './lib/models/deck';\r\nexport * from './lib/models/joker';\r\nexport * from './lib/shared/enums';\r\nexport * from './lib/models/dice';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}