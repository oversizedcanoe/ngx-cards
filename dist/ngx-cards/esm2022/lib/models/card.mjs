import { Subject } from "rxjs";
import { CardValue, FaceState, Suit } from "../shared/enums";
export class Card {
    suit;
    value;
    state;
    flipped = new Subject();
    constructor(value, suit, state = FaceState.FaceDown) {
        if (value in CardValue == false) {
            throw new Error(`Cannot create Card object with value: ${value}`);
        }
        if (suit in Suit == false) {
            throw new Error(`Cannot create Card object with suit: ${suit}`);
        }
        if (state in FaceState == false) {
            throw new Error(`Cannot create Card object with state: ${state}`);
        }
        if (suit == Suit.None && value != CardValue.Joker) {
            throw new Error(`Invalid value: ${value}, only CardValue.Joker can be created with Suit.None`);
        }
        this.value = value;
        this.suit = suit;
        this.state = state;
    }
    isFaceUp() {
        return this.state == FaceState.FaceUp;
    }
    isFaceDown() {
        return this.isFaceUp() == false;
    }
    flip() {
        if (this.state == FaceState.FaceDown) {
            this.state = FaceState.FaceUp;
        }
        else if (this.state == FaceState.FaceUp) {
            this.state = FaceState.FaceDown;
        }
        this.flipped.next(this.state);
    }
    shorthandName() {
        let name = '';
        let addFirstCharOfSuit = true;
        switch (this.value) {
            case CardValue.Joker:
                name += "W"; // wild
                addFirstCharOfSuit = false;
                break;
            case CardValue.Ace:
                name += "A";
                break;
            case CardValue.Jack:
                name += "J";
                break;
            case CardValue.Queen:
                name += "Q";
                break;
            case CardValue.King:
                name += "K";
                break;
            default:
                name += this.value.toString();
        }
        if (addFirstCharOfSuit) {
            name += Suit[this.suit][0]; // first character of suit
        }
        return name;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1jYXJkcy9zcmMvbGliL21vZGVscy9jYXJkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDL0IsT0FBTyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFN0QsTUFBTSxPQUFPLElBQUk7SUFDTixJQUFJLENBQU87SUFDWCxLQUFLLENBQVM7SUFDZCxLQUFLLENBQVk7SUFDakIsT0FBTyxHQUF1QixJQUFJLE9BQU8sRUFBYSxDQUFDO0lBRTlELFlBQVksS0FBYSxFQUFFLElBQVUsRUFBRSxRQUFtQixTQUFTLENBQUMsUUFBUTtRQUN4RSxJQUFJLEtBQUssSUFBSSxTQUFTLElBQUksS0FBSyxFQUFFLENBQUM7WUFDOUIsTUFBTSxJQUFJLEtBQUssQ0FBQyx5Q0FBeUMsS0FBSyxFQUFFLENBQUMsQ0FBQTtRQUNyRSxDQUFDO1FBRUQsSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLEtBQUssRUFBRSxDQUFDO1lBQ3hCLE1BQU0sSUFBSSxLQUFLLENBQUMsd0NBQXdDLElBQUksRUFBRSxDQUFDLENBQUE7UUFDbkUsQ0FBQztRQUVELElBQUksS0FBSyxJQUFJLFNBQVMsSUFBSSxLQUFLLEVBQUUsQ0FBQztZQUM5QixNQUFNLElBQUksS0FBSyxDQUFDLHlDQUF5QyxLQUFLLEVBQUUsQ0FBQyxDQUFBO1FBQ3JFLENBQUM7UUFFRCxJQUFJLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLEtBQUssSUFBSSxTQUFTLENBQUMsS0FBSyxFQUFFLENBQUM7WUFDaEQsTUFBTSxJQUFJLEtBQUssQ0FBQyxrQkFBa0IsS0FBSyxzREFBc0QsQ0FBQyxDQUFBO1FBQ2xHLENBQUM7UUFFRCxJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztRQUNuQixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztJQUN2QixDQUFDO0lBRU0sUUFBUTtRQUNYLE9BQU8sSUFBSSxDQUFDLEtBQUssSUFBSSxTQUFTLENBQUMsTUFBTSxDQUFDO0lBQzFDLENBQUM7SUFFTSxVQUFVO1FBQ2IsT0FBTyxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksS0FBSyxDQUFDO0lBQ3BDLENBQUM7SUFFTSxJQUFJO1FBQ1AsSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLFNBQVMsQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUNuQyxJQUFJLENBQUMsS0FBSyxHQUFHLFNBQVMsQ0FBQyxNQUFNLENBQUE7UUFDakMsQ0FBQzthQUNJLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDdEMsSUFBSSxDQUFDLEtBQUssR0FBRyxTQUFTLENBQUMsUUFBUSxDQUFDO1FBQ3BDLENBQUM7UUFFRCxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbEMsQ0FBQztJQUVNLGFBQWE7UUFDaEIsSUFBSSxJQUFJLEdBQVcsRUFBRSxDQUFDO1FBQ3RCLElBQUksa0JBQWtCLEdBQVksSUFBSSxDQUFDO1FBRXZDLFFBQVEsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1lBQ2pCLEtBQUssU0FBUyxDQUFDLEtBQUs7Z0JBQ2hCLElBQUksSUFBSSxHQUFHLENBQUMsQ0FBQyxPQUFPO2dCQUNwQixrQkFBa0IsR0FBRyxLQUFLLENBQUM7Z0JBQzNCLE1BQU07WUFDVixLQUFLLFNBQVMsQ0FBQyxHQUFHO2dCQUNkLElBQUksSUFBSSxHQUFHLENBQUM7Z0JBQ1osTUFBTTtZQUNWLEtBQUssU0FBUyxDQUFDLElBQUk7Z0JBQ2YsSUFBSSxJQUFJLEdBQUcsQ0FBQztnQkFDWixNQUFNO1lBQ1YsS0FBSyxTQUFTLENBQUMsS0FBSztnQkFDaEIsSUFBSSxJQUFJLEdBQUcsQ0FBQztnQkFDWixNQUFNO1lBQ1YsS0FBSyxTQUFTLENBQUMsSUFBSTtnQkFDZixJQUFJLElBQUksR0FBRyxDQUFDO2dCQUNaLE1BQU07WUFDVjtnQkFDSSxJQUFJLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUN0QyxDQUFDO1FBRUQsSUFBSSxrQkFBa0IsRUFBRSxDQUFDO1lBQ3JCLElBQUksSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsMEJBQTBCO1FBQzFELENBQUM7UUFFRCxPQUFPLElBQUksQ0FBQztJQUVoQixDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSBcInJ4anNcIjtcclxuaW1wb3J0IHsgQ2FyZFZhbHVlLCBGYWNlU3RhdGUsIFN1aXQgfSBmcm9tIFwiLi4vc2hhcmVkL2VudW1zXCI7XHJcblxyXG5leHBvcnQgY2xhc3MgQ2FyZCB7XHJcbiAgICBwdWJsaWMgc3VpdDogU3VpdDtcclxuICAgIHB1YmxpYyB2YWx1ZTogbnVtYmVyO1xyXG4gICAgcHVibGljIHN0YXRlOiBGYWNlU3RhdGU7XHJcbiAgICBwdWJsaWMgZmxpcHBlZDogU3ViamVjdDxGYWNlU3RhdGU+ID0gbmV3IFN1YmplY3Q8RmFjZVN0YXRlPigpO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHZhbHVlOiBudW1iZXIsIHN1aXQ6IFN1aXQsIHN0YXRlOiBGYWNlU3RhdGUgPSBGYWNlU3RhdGUuRmFjZURvd24pIHtcclxuICAgICAgICBpZiAodmFsdWUgaW4gQ2FyZFZhbHVlID09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IGNyZWF0ZSBDYXJkIG9iamVjdCB3aXRoIHZhbHVlOiAke3ZhbHVlfWApXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoc3VpdCBpbiBTdWl0ID09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IGNyZWF0ZSBDYXJkIG9iamVjdCB3aXRoIHN1aXQ6ICR7c3VpdH1gKVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHN0YXRlIGluIEZhY2VTdGF0ZSA9PSBmYWxzZSkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBjcmVhdGUgQ2FyZCBvYmplY3Qgd2l0aCBzdGF0ZTogJHtzdGF0ZX1gKVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHN1aXQgPT0gU3VpdC5Ob25lICYmIHZhbHVlICE9IENhcmRWYWx1ZS5Kb2tlcikge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdmFsdWU6ICR7dmFsdWV9LCBvbmx5IENhcmRWYWx1ZS5Kb2tlciBjYW4gYmUgY3JlYXRlZCB3aXRoIFN1aXQuTm9uZWApXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLnZhbHVlID0gdmFsdWU7XHJcbiAgICAgICAgdGhpcy5zdWl0ID0gc3VpdDtcclxuICAgICAgICB0aGlzLnN0YXRlID0gc3RhdGU7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGlzRmFjZVVwKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLnN0YXRlID09IEZhY2VTdGF0ZS5GYWNlVXA7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGlzRmFjZURvd24oKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuaXNGYWNlVXAoKSA9PSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZmxpcCgpIHtcclxuICAgICAgICBpZiAodGhpcy5zdGF0ZSA9PSBGYWNlU3RhdGUuRmFjZURvd24pIHtcclxuICAgICAgICAgICAgdGhpcy5zdGF0ZSA9IEZhY2VTdGF0ZS5GYWNlVXBcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5zdGF0ZSA9PSBGYWNlU3RhdGUuRmFjZVVwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc3RhdGUgPSBGYWNlU3RhdGUuRmFjZURvd247XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmZsaXBwZWQubmV4dCh0aGlzLnN0YXRlKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2hvcnRoYW5kTmFtZSgpIHtcclxuICAgICAgICBsZXQgbmFtZTogc3RyaW5nID0gJyc7XHJcbiAgICAgICAgbGV0IGFkZEZpcnN0Q2hhck9mU3VpdDogYm9vbGVhbiA9IHRydWU7XHJcblxyXG4gICAgICAgIHN3aXRjaCAodGhpcy52YWx1ZSkge1xyXG4gICAgICAgICAgICBjYXNlIENhcmRWYWx1ZS5Kb2tlcjpcclxuICAgICAgICAgICAgICAgIG5hbWUgKz0gXCJXXCI7IC8vIHdpbGRcclxuICAgICAgICAgICAgICAgIGFkZEZpcnN0Q2hhck9mU3VpdCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ2FyZFZhbHVlLkFjZTpcclxuICAgICAgICAgICAgICAgIG5hbWUgKz0gXCJBXCI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDYXJkVmFsdWUuSmFjazpcclxuICAgICAgICAgICAgICAgIG5hbWUgKz0gXCJKXCI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDYXJkVmFsdWUuUXVlZW46XHJcbiAgICAgICAgICAgICAgICBuYW1lICs9IFwiUVwiO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ2FyZFZhbHVlLktpbmc6XHJcbiAgICAgICAgICAgICAgICBuYW1lICs9IFwiS1wiO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGRlZmF1bHQ6XHJcbiAgICAgICAgICAgICAgICBuYW1lICs9IHRoaXMudmFsdWUudG9TdHJpbmcoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChhZGRGaXJzdENoYXJPZlN1aXQpIHtcclxuICAgICAgICAgICAgbmFtZSArPSBTdWl0W3RoaXMuc3VpdF1bMF07IC8vIGZpcnN0IGNoYXJhY3RlciBvZiBzdWl0XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gbmFtZTtcclxuXHJcbiAgICB9XHJcbn1cclxuXHJcbiJdfQ==